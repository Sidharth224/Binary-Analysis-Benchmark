diff --git a/drivers/bluetooth/hci/spi.c b/drivers/bluetooth/hci/spi.c
index 600961462b..9d0614117e 100644
--- a/drivers/bluetooth/hci/spi.c
+++ b/drivers/bluetooth/hci/spi.c
@@ -310,6 +310,8 @@ static void bt_spi_rx_thread(void)
 	u8_t header_slave[5];
 	struct bt_hci_acl_hdr acl_hdr;
 	u8_t size = 0U;
+	int size_available;
+	int size_requested;
 	int ret;
 
 	(void)memset(&txmsg, 0xFF, SPI_MAX_MSG_LEN);
@@ -370,15 +372,20 @@ static void bt_spi_rx_thread(void)
 					break;
 				}
 
+				size_available = net_buf_tailroom(buf);
+				size_requested = rxmsg[EVT_HEADER_SIZE] + 2;
 				net_buf_add_mem(buf, &rxmsg[1],
-						rxmsg[EVT_HEADER_SIZE] + 2);
+					MIN(size_available, size_requested));
 				break;
 			case HCI_ACL:
 				buf = bt_buf_get_rx(BT_BUF_ACL_IN, K_FOREVER);
 				memcpy(&acl_hdr, &rxmsg[1], sizeof(acl_hdr));
 				net_buf_add_mem(buf, &acl_hdr, sizeof(acl_hdr));
+
+				size_available = net_buf_tailroom(buf);
+				size_requested = sys_le16_to_cpu(acl_hdr.len);
 				net_buf_add_mem(buf, &rxmsg[5],
-						sys_le16_to_cpu(acl_hdr.len));
+						MIN(size_available, size_requested));
 				break;
 			default:
 				BT_ERR("Unknown BT buf type %d", rxmsg[0]);
