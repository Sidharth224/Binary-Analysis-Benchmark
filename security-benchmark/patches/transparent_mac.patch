diff --git a/arch/cpu/cc2538/dev/cc2538-rf.h b/arch/cpu/cc2538/dev/cc2538-rf.h
index 958221783..937da4dee 100644
--- a/arch/cpu/cc2538/dev/cc2538-rf.h
+++ b/arch/cpu/cc2538/dev/cc2538-rf.h
@@ -56,7 +56,12 @@
 #define CC2538_RF_CHANNEL_MIN            11
 #define CC2538_RF_CHANNEL_MAX            26
 #define CC2538_RF_CHANNEL_SPACING         5
-#define CC2538_RF_MAX_PACKET_LEN        127
+// Fuzzware: inherit packet size from network layer for transparent MAC
+#ifdef PACKETBUF_CONF_SIZE
+#define CC2538_RF_MAX_PACKET_LEN PACKETBUF_CONF_SIZE
+#else
+#define CC2538_RF_MAX_PACKET_LEN          127
+#endif
 #define CC2538_RF_MIN_PACKET_LEN          4
 #define CC2538_RF_CCA_CLEAR               1
 #define CC2538_RF_CCA_BUSY                0
diff --git a/os/net/mac/nullmac/nullmac.c b/os/net/mac/nullmac/nullmac.c
index de92ee5d8..7463bd47c 100644
--- a/os/net/mac/nullmac/nullmac.c
+++ b/os/net/mac/nullmac/nullmac.c
@@ -48,34 +48,42 @@
 static void
 send_packet(mac_callback_t sent, void *ptr)
 {
+  NETSTACK_RADIO.send(ptr, packetbuf_datalen());
 }
 /*---------------------------------------------------------------------------*/
 static void
 packet_input(void)
 {
+  // Fuzzware: Instead of discarding, pass through
+  NETSTACK_NETWORK.input();
 }
 /*---------------------------------------------------------------------------*/
 static int
 on(void)
 {
-  return 0;
+  return NETSTACK_RADIO.on();
 }
 /*---------------------------------------------------------------------------*/
 static int
 off(void)
 {
-  return 0;
+  return NETSTACK_RADIO.off();
 }
 /*---------------------------------------------------------------------------*/
 static int
 max_payload(void)
 {
-  return 0;
+  radio_value_t res;
+
+  res = NETSTACK_RADIO.get_value(RADIO_CONST_MAX_PAYLOAD_LEN, &res);
+
+  return res;
 }
 /*---------------------------------------------------------------------------*/
 static void
 init(void)
 {
+  on();
 }
 /*---------------------------------------------------------------------------*/
 const struct mac_driver nullmac_driver = {
